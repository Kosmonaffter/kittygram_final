name: Kittygram CI/CD

on:
  push:
    branches:
      - main

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r backend/requirements.txt

    - name: Lint backend code (PEP8)
      run: flake8 backend/

    - name: Run backend tests
      run: pytest backend/

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push backend image
      run: |
        docker build -t $DOCKERHUB_USERNAME/kittygram_backend:latest ./backend
        docker push $DOCKERHUB_USERNAME/kittygram_backend:latest

    - name: Build and push frontend image
      run: |
        docker build -t $DOCKERHUB_USERNAME/kittygram_frontend:latest ./frontend
        docker push $DOCKERHUB_USERNAME/kittygram_frontend:latest

    - name: Build and push gateway image
      run: |
        docker build -t $DOCKERHUB_USERNAME/kittygram_gateway:latest ./nginx
        docker push $DOCKERHUB_USERNAME/kittygram_gateway:latest

    - name: Deploy to remote server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          cd ~/kittygram
          docker-compose pull
          docker-compose up -d --build
          docker-compose exec backend python manage.py migrate
          docker-compose exec backend python manage.py collectstatic --noinput

    - name: Notify Telegram on success
      uses: appleboy/telegram-action@v0.1.3
      with:
        to: ${{ env.TELEGRAM_CHAT_ID }}
        token: ${{ env.TELEGRAM_TOKEN }}
        message: "Запущено ехуу!"
